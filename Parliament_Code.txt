## This first section belongs in common/scripted_effects
parliament_seats_initial = {
	# Parliament_Seat_Array assigns seats to each party, while Parliament_ID_Array contains an id for each party.
	add_to_array = { global.parliament_seat_array = 95 } # Party A
	add_to_array = { global.parliament_seat_array = 15 } # Party B
	add_to_array = { global.parliament_seat_array = 20 } # Party C
	add_to_array = { global.parliament_seat_array = 35 } # Party D
	add_to_array = { global.parliament_seat_array = 15 } # Party E

	# The following populates the array so it is visible in game. Edit the ending number to add more parties than 5.
	for_loop_effect = {
		start = 1 # Starts at the first variable/first party.
		end = 6 # Ends at the last variable/last party. This number should be one higher than the number of parties.

		add_to_array = { global.parliament_id_array = v } # V is a variable storing the current iteration of the root.
	}

	modify_parliament_seats = yes
}

modify_parliament_seats = {
	for_each_loop = {
		array = global.parliament_id_array

		set_temp_variable = { temp_id = global.parliament_id_array^i } # I is the current index of the array.
		set_temp_variable = { temp_index = i }
		modify_parliament_id_seats = yes
	}
}

modify_parliament_id_seats = {
	set_temp_variable = { temp_seat_count = global.parliament_seat_array^temp_index } # The temporary seat count will be 95 for example if temp_index is 0, 15 if 1 and so on.

	# What this does is add the id of each party until the number of IDs in the array equals the number of seats available. 
	while_loop_effect = {
		limit = {
			check_variable = { temp_seat_count > 0 }
		}
		add_to_array = { global.parliament_main_array = temp_id }
		subtract_from_temp_variable = { temp_seat_count = 1 }
	}
	# The global.parliament_main_array will essentially look like:
	# 1,1,1,1,1,1,1,...(repeated 95 times),2,2,2,2,2,2,2(repeated 15 times),3,3,3.. etc.
}

## Now, move to common/scripted_guis

# Define a dynamic_lists in the scripted gui file using global.parliament_main_array
scripted_gui = {
	parliament_gui = {
		....

		dynamic_lists = {
			parliament_main_grid = {
				array = global.parliament_main_array
				change_scope = yes
				entry_container = parliament_main_entry
			}
		}

		properties = {
			member_icon = {
				frame = v
			}
		}
	}
}

## Next, go to interface/ and create a .gui file.

# In that interface file, you should add something similar to the below section of code.
guiTypes = {
	# This creates the container for your seats.
	containerWindowType = {
        name = "(Name of what you put in scripted_gui, for this example, parliament_gui)"
        position = { x = 0 y = 0 }
		size = { width = 400 height = 400 }

		# This is the gridbox that creates the seats.
		gridboxtype = {
			name = "parliament_main_grid" # The text here must be the same as entry_container from the scripted_gui or else it won't work.
			position = { x = -400 y = 15 }
			size = { width = 100%% height = 100%% }
			padding = { top = 0 bottom = 10 }
			slotsize = { width = 13 height = 13 }
			max_slots_vertical = 10
			add_horizontal = no
		}
	}

	# Entry is a separate container from the main interface container.
	# This controls what is visualized.
	containerWindowType = {
        name = "parliament_main_entry" # The text here must be the same as entry_container from the scripted_gui or else it won't work.
        position = { x = 0 y = 0 }
		size = { width = 13 height = 13 }

		iconType = {
			name = "member_icon"
			spriteType = "GFX_parliament_seats_strip" # This should be a strip with 5 frames, with each frame representing each unique party (goes in the order Party A-E)
			position = { x = 0 y = 0 }
		}
    }
}

